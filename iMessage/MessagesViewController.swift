//
//  MessagesViewController.swift
//  iMessage
//
//  Created by OIvanov on 11.04.2018.
//  Copyright © 2018 mkb. All rights reserved.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController {
    
    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var temperaturaLabel: UILabel!
    
    override func viewDidLoad() {
        super.viewDidLoad()

    }
        
    @IBAction func sendMessage(_ sender: Any) {
        /*
         MSMessageTemplateLayout описывает, как объект MSMessage представлен в стенограмме. Шаблон сообщения включает в себя значок расширения сообщения, изображение, видео или аудиофайл, а также ряд текстовых элементов (заголовок, субтитры, субтитры, субтитры, заголовок и заключительная подзапись).
         
         Когда это свойство image и свойство mediaURL установлены, mediaURL свойство будет проигнорировано
         */
        let layout = MSMessageTemplateLayout()
        layout.caption = "Текущая температура +25"
        layout.image = UIImage(named: "01d.png")
        /*
         Используйте класс MSMessage для создания интерактивных объектов сообщений. Чтобы создать сообщение, которое может быть обновлено участниками беседы, создайте сообщение с сеансом, используя метод init (session :). В противном случае создайте сообщение, используя метод init ().
         */
        let message = MSMessage()
        message.layout = layout
        /*
         activeConversation
         Разговор, отображаемый в стенограмме.
         Это разговор, который пользователь просматривает в приложении «Сообщения».
         */
        /*
         insert
         Вставляет объект сообщения в поле ввода приложения «Сообщения».
         Этот метод работает асинхронно. Хотя метод немедленно возвращается, фактическая работа откладывается и выполняется в фоновом режиме. Как только вставка вставлена, система вызывает блок завершения в фоновом режиме.
         Этот метод не отправляет сообщение. Он вставляет сообщение в поле ввода приложения «Сообщения». Сообщение не отправляется до тех пор, пока пользователь не удалит кнопку отправки.
         Блок, который вызывается, как только вставка завершена.
         */
        activeConversation?.insert(message, completionHandler: nil)
    }

    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }

}
